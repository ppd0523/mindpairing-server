# Generated by Django 4.1.7 on 2023-03-15 07:17

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('nickname', models.CharField(max_length=20, unique=True)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('gender', models.SmallIntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'Unknown')], default=2)),
                ('phone', models.CharField(blank=True, max_length=12, null=True, unique=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='user_image/')),
                ('is_init', models.BooleanField(default=False)),
                ('mbti', models.CharField(default='xxxx', max_length=4, validators=[django.core.validators.RegexValidator(message='Not match MBTI Characters', regex='[IEx][SNx][TFx][PJx]')])),
                ('create_at', models.DateTimeField(auto_now_add=True)),
                ('update_at', models.DateTimeField(auto_now=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='OpenAuth',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kakao', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('naver', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('google', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('apple', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('kakao_update_at', models.DateTimeField(blank=True, null=True)),
                ('naver_update_at', models.DateTimeField(blank=True, null=True)),
                ('google_update_at', models.DateTimeField(blank=True, null=True)),
                ('apple_update_at', models.DateTimeField(blank=True, null=True)),
                ('kakao_delete_at', models.DateTimeField(blank=True, null=True)),
                ('naver_delete_at', models.DateTimeField(blank=True, null=True)),
                ('google_delete_at', models.DateTimeField(blank=True, null=True)),
                ('apple_delete_at', models.DateTimeField(blank=True, null=True)),
                ('user_id', models.OneToOneField(blank=True, db_column='user_id', null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='open_auth', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Social authentication',
                'db_table': 'user_oauth',
            },
        ),
    ]
